<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
  version="3.1"
  metadata-complete="true" >
  	<!-- 修改servlet版本为3.1 -->
   <!-- <servlet-mapping>
      <servlet-name>default</servlet-name>
      <url-pattern>*.js</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
      <servlet-name>default</servlet-name>
      <url-pattern>*.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>   
        <servlet-name>default</servlet-name>    
        <url-pattern>*.jpg</url-pattern>    
    </servlet-mapping>    
  
    <servlet-mapping>   
        <servlet-name>default</servlet-name>   
        <url-pattern>*.gif</url-pattern>   
    </servlet-mapping>    
      
    <servlet-mapping>   
        <servlet-name>default</servlet-name>   
        <url-pattern>*.css</url-pattern>   
    </servlet-mapping>      -->
   
  	<!-- 解决post的乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<!-- 初始化参数，设置编码为utf-8 -->
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置shirofilter 通过代理来配置，对象由spring容器来创建的，但是交由servlet容器来管理 -->
	<!-- shiro过虑器，DelegatingFilterProxy通过代理模式将spring容器中的bean和filter关联起来 -->
  <!--   <filter>
       <filter-name>shiroFilter</filter-name>
       <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
       设置true由servlet容器控制filter的生命周期
       <init-param>
           <param-name>targetFilterLifecycle</param-name>
           <param-value>true</param-value>
       </init-param>
       设置spring容器filter的bean id，如果不设置则找与filter-name一致的bean
       <init-param>
           <param-name>targetBeanName</param-name>
           <param-value>shiroFilter</param-value>
       </init-param>
   </filter>
   <filter-mapping>
       <filter-name>shiroFilter</filter-name>
       <url-pattern>/*</url-pattern>
   </filter-mapping>  -->
  	<!-- 配置DispatcherServlet -->
  	<servlet>
  		<servlet-name>userLogin</servlet-name>
  		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<!-- 	<配置springMVC需要加载的配置文件
  			spring-dao.xml,spring-service.xml,spring-web.xml
  			Mybatis -> spring  -> springMVC -->
  		 
  		<init-param>
  			<param-name>contextConfigLocation</param-name>
  			<param-value>classpath:spring/spring-*.xml</param-value>
  		</init-param>
  	    <load-on-startup>1</load-on-startup>
  	</servlet>
  	<servlet-mapping>
		<servlet-name>userLogin</servlet-name> 
		<!-- 默认匹配所有的请求 --> 	
  		<url-pattern>/</url-pattern>
  	</servlet-mapping>
  	<error-page>
        <error-code>404</error-code>
        <location>/jsp/404.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/jsp/500.jsp</location>
    </error-page>
        <welcome-file-list>
        <welcome-file>user/login</welcome-file>
    </welcome-file-list>
  </web-app>